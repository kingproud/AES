#include <stdio.h>
#include <time.h>
/*aes_small.c*/
//辅助矩阵
/*s盒矩阵：The AES Substitution Table*/// 256 位的密匙256 位支持长度为32 个字符
static const unsigned char sbox[256]={	//static:内部变量  const：只读，不可变常量
	0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,
	0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,
	0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,
	0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,
	0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,
	0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,
	0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,
	0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,
	0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,
	0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,
	0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,
	0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,
	0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,
	0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8,
	0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,
	0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,
	0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,
	0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,
	0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,
	0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb,
	0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,
	0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,
	0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,
	0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08,
	0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,
	0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,
	0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,
	0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,
	0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,
	0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,
	0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,
	0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16,
};
//逆向S 盒矩阵
static const unsigned char contrary_sbox[256]={
	0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38,
	0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb,
	0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87,
	0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb,
	0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d,
	0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e,//0x4e
	0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2,
	0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25,
	0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16,
	0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92,
	0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda,
	0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84,
	0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a,
	0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06,
	0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02,
	0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b,
	0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea,
	0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73,
	0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85,
	0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e,
	0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89,
	0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b,
	0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20,
	0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4,
	0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31,
	0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f,
	0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d,
	0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef,
	0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0,
	0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61,
	0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26,
	0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d,
};
/*轮常量表 The key schedule rcon table*/
static const unsigned char Rcon[10]={
	0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36};

static const unsigned char  L_boxx[15][256]={
					0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,0xb,0xc,0xd,0xe,0xf,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e,0x3f,0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x60,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0x7e,0x7f,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,0xa0,0xa1,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,0xa9,0xaa,0xab,0xac,0xad,0xae,0xaf,0xb0,0xb1,0xb2,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xbb,0xbc,0xbd,0xbe,0xbf,0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xcb,0xcc,0xcd,0xce,0xcf,0xd0,0xd1,0xd2,0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0,0xe1,0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xeb,0xec,0xed,0xee,0xef,0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd,0xfe,0xff,
					0x0,0x2,0x4,0x6,0x8,0xa,0xc,0xe,0x10,0x12,0x14,0x16,0x18,0x1a,0x1c,0x1e,0x20,0x22,0x24,0x26,0x28,0x2a,0x2c,0x2e,0x30,0x32,0x34,0x36,0x38,0x3a,0x3c,0x3e,0x40,0x42,0x44,0x46,0x48,0x4a,0x4c,0x4e,0x50,0x52,0x54,0x56,0x58,0x5a,0x5c,0x5e,0x60,0x62,0x64,0x66,0x68,0x6a,0x6c,0x6e,0x70,0x72,0x74,0x76,0x78,0x7a,0x7c,0x7e,0x80,0x82,0x84,0x86,0x88,0x8a,0x8c,0x8e,0x90,0x92,0x94,0x96,0x98,0x9a,0x9c,0x9e,0xa0,0xa2,0xa4,0xa6,0xa8,0xaa,0xac,0xae,0xb0,0xb2,0xb4,0xb6,0xb8,0xba,0xbc,0xbe,0xc0,0xc2,0xc4,0xc6,0xc8,0xca,0xcc,0xce,0xd0,0xd2,0xd4,0xd6,0xd8,0xda,0xdc,0xde,0xe0,0xe2,0xe4,0xe6,0xe8,0xea,0xec,0xee,0xf0,0xf2,0xf4,0xf6,0xf8,0xfa,0xfc,0xfe,0x1b,0x19,0x1f,0x1d,0x13,0x11,0x17,0x15,0xb,0x9,0xf,0xd,0x3,0x1,0x7,0x5,0x3b,0x39,0x3f,0x3d,0x33,0x31,0x37,0x35,0x2b,0x29,0x2f,0x2d,0x23,0x21,0x27,0x25,0x5b,0x59,0x5f,0x5d,0x53,0x51,0x57,0x55,0x4b,0x49,0x4f,0x4d,0x43,0x41,0x47,0x45,0x7b,0x79,0x7f,0x7d,0x73,0x71,0x77,0x75,0x6b,0x69,0x6f,0x6d,0x63,0x61,0x67,0x65,0x9b,0x99,0x9f,0x9d,0x93,0x91,0x97,0x95,0x8b,0x89,0x8f,0x8d,0x83,0x81,0x87,0x85,0xbb,0xb9,0xbf,0xbd,0xb3,0xb1,0xb7,0xb5,0xab,0xa9,0xaf,0xad,0xa3,0xa1,0xa7,0xa5,0xdb,0xd9,0xdf,0xdd,0xd3,0xd1,0xd7,0xd5,0xcb,0xc9,0xcf,0xcd,0xc3,0xc1,0xc7,0xc5,0xfb,0xf9,0xff,0xfd,0xf3,0xf1,0xf7,0xf5,0xeb,0xe9,0xef,0xed,0xe3,0xe1,0xe7,0xe5,
					0x0,0x3,0x6,0x5,0xc,0xf,0xa,0x9,0x18,0x1b,0x1e,0x1d,0x14,0x17,0x12,0x11,0x30,0x33,0x36,0x35,0x3c,0x3f,0x3a,0x39,0x28,0x2b,0x2e,0x2d,0x24,0x27,0x22,0x21,0x60,0x63,0x66,0x65,0x6c,0x6f,0x6a,0x69,0x78,0x7b,0x7e,0x7d,0x74,0x77,0x72,0x71,0x50,0x53,0x56,0x55,0x5c,0x5f,0x5a,0x59,0x48,0x4b,0x4e,0x4d,0x44,0x47,0x42,0x41,0xc0,0xc3,0xc6,0xc5,0xcc,0xcf,0xca,0xc9,0xd8,0xdb,0xde,0xdd,0xd4,0xd7,0xd2,0xd1,0xf0,0xf3,0xf6,0xf5,0xfc,0xff,0xfa,0xf9,0xe8,0xeb,0xee,0xed,0xe4,0xe7,0xe2,0xe1,0xa0,0xa3,0xa6,0xa5,0xac,0xaf,0xaa,0xa9,0xb8,0xbb,0xbe,0xbd,0xb4,0xb7,0xb2,0xb1,0x90,0x93,0x96,0x95,0x9c,0x9f,0x9a,0x99,0x88,0x8b,0x8e,0x8d,0x84,0x87,0x82,0x81,0x9b,0x98,0x9d,0x9e,0x97,0x94,0x91,0x92,0x83,0x80,0x85,0x86,0x8f,0x8c,0x89,0x8a,0xab,0xa8,0xad,0xae,0xa7,0xa4,0xa1,0xa2,0xb3,0xb0,0xb5,0xb6,0xbf,0xbc,0xb9,0xba,0xfb,0xf8,0xfd,0xfe,0xf7,0xf4,0xf1,0xf2,0xe3,0xe0,0xe5,0xe6,0xef,0xec,0xe9,0xea,0xcb,0xc8,0xcd,0xce,0xc7,0xc4,0xc1,0xc2,0xd3,0xd0,0xd5,0xd6,0xdf,0xdc,0xd9,0xda,0x5b,0x58,0x5d,0x5e,0x57,0x54,0x51,0x52,0x43,0x40,0x45,0x46,0x4f,0x4c,0x49,0x4a,0x6b,0x68,0x6d,0x6e,0x67,0x64,0x61,0x62,0x73,0x70,0x75,0x76,0x7f,0x7c,0x79,0x7a,0x3b,0x38,0x3d,0x3e,0x37,0x34,0x31,0x32,0x23,0x20,0x25,0x26,0x2f,0x2c,0x29,0x2a,0xb,0x8,0xd,0xe,0x7,0x4,0x1,0x2,0x13,0x10,0x15,0x16,0x1f,0x1c,0x19,0x1a,
					0x0,0x4,0x8,0xc,0x10,0x14,0x18,0x1c,0x20,0x24,0x28,0x2c,0x30,0x34,0x38,0x3c,0x40,0x44,0x48,0x4c,0x50,0x54,0x58,0x5c,0x60,0x64,0x68,0x6c,0x70,0x74,0x78,0x7c,0x80,0x84,0x88,0x8c,0x90,0x94,0x98,0x9c,0xa0,0xa4,0xa8,0xac,0xb0,0xb4,0xb8,0xbc,0xc0,0xc4,0xc8,0xcc,0xd0,0xd4,0xd8,0xdc,0xe0,0xe4,0xe8,0xec,0xf0,0xf4,0xf8,0xfc,0x1b,0x1f,0x13,0x17,0xb,0xf,0x3,0x7,0x3b,0x3f,0x33,0x37,0x2b,0x2f,0x23,0x27,0x5b,0x5f,0x53,0x57,0x4b,0x4f,0x43,0x47,0x7b,0x7f,0x73,0x77,0x6b,0x6f,0x63,0x67,0x9b,0x9f,0x93,0x97,0x8b,0x8f,0x83,0x87,0xbb,0xbf,0xb3,0xb7,0xab,0xaf,0xa3,0xa7,0xdb,0xdf,0xd3,0xd7,0xcb,0xcf,0xc3,0xc7,0xfb,0xff,0xf3,0xf7,0xeb,0xef,0xe3,0xe7,0x36,0x32,0x3e,0x3a,0x26,0x22,0x2e,0x2a,0x16,0x12,0x1e,0x1a,0x6,0x2,0xe,0xa,0x76,0x72,0x7e,0x7a,0x66,0x62,0x6e,0x6a,0x56,0x52,0x5e,0x5a,0x46,0x42,0x4e,0x4a,0xb6,0xb2,0xbe,0xba,0xa6,0xa2,0xae,0xaa,0x96,0x92,0x9e,0x9a,0x86,0x82,0x8e,0x8a,0xf6,0xf2,0xfe,0xfa,0xe6,0xe2,0xee,0xea,0xd6,0xd2,0xde,0xda,0xc6,0xc2,0xce,0xca,0x2d,0x29,0x25,0x21,0x3d,0x39,0x35,0x31,0xd,0x9,0x5,0x1,0x1d,0x19,0x15,0x11,0x6d,0x69,0x65,0x61,0x7d,0x79,0x75,0x71,0x4d,0x49,0x45,0x41,0x5d,0x59,0x55,0x51,0xad,0xa9,0xa5,0xa1,0xbd,0xb9,0xb5,0xb1,0x8d,0x89,0x85,0x81,0x9d,0x99,0x95,0x91,0xed,0xe9,0xe5,0xe1,0xfd,0xf9,0xf5,0xf1,0xcd,0xc9,0xc5,0xc1,0xdd,0xd9,0xd5,0xd1,
					0x0,0x5,0xa,0xf,0x14,0x11,0x1e,0x1b,0x28,0x2d,0x22,0x27,0x3c,0x39,0x36,0x33,0x50,0x55,0x5a,0x5f,0x44,0x41,0x4e,0x4b,0x78,0x7d,0x72,0x77,0x6c,0x69,0x66,0x63,0xa0,0xa5,0xaa,0xaf,0xb4,0xb1,0xbe,0xbb,0x88,0x8d,0x82,0x87,0x9c,0x99,0x96,0x93,0xf0,0xf5,0xfa,0xff,0xe4,0xe1,0xee,0xeb,0xd8,0xdd,0xd2,0xd7,0xcc,0xc9,0xc6,0xc3,0x5b,0x5e,0x51,0x54,0x4f,0x4a,0x45,0x40,0x73,0x76,0x79,0x7c,0x67,0x62,0x6d,0x68,0xb,0xe,0x1,0x4,0x1f,0x1a,0x15,0x10,0x23,0x26,0x29,0x2c,0x37,0x32,0x3d,0x38,0xfb,0xfe,0xf1,0xf4,0xef,0xea,0xe5,0xe0,0xd3,0xd6,0xd9,0xdc,0xc7,0xc2,0xcd,0xc8,0xab,0xae,0xa1,0xa4,0xbf,0xba,0xb5,0xb0,0x83,0x86,0x89,0x8c,0x97,0x92,0x9d,0x98,0xb6,0xb3,0xbc,0xb9,0xa2,0xa7,0xa8,0xad,0x9e,0x9b,0x94,0x91,0x8a,0x8f,0x80,0x85,0xe6,0xe3,0xec,0xe9,0xf2,0xf7,0xf8,0xfd,0xce,0xcb,0xc4,0xc1,0xda,0xdf,0xd0,0xd5,0x16,0x13,0x1c,0x19,0x2,0x7,0x8,0xd,0x3e,0x3b,0x34,0x31,0x2a,0x2f,0x20,0x25,0x46,0x43,0x4c,0x49,0x52,0x57,0x58,0x5d,0x6e,0x6b,0x64,0x61,0x7a,0x7f,0x70,0x75,0xed,0xe8,0xe7,0xe2,0xf9,0xfc,0xf3,0xf6,0xc5,0xc0,0xcf,0xca,0xd1,0xd4,0xdb,0xde,0xbd,0xb8,0xb7,0xb2,0xa9,0xac,0xa3,0xa6,0x95,0x90,0x9f,0x9a,0x81,0x84,0x8b,0x8e,0x4d,0x48,0x47,0x42,0x59,0x5c,0x53,0x56,0x65,0x60,0x6f,0x6a,0x71,0x74,0x7b,0x7e,0x1d,0x18,0x17,0x12,0x9,0xc,0x3,0x6,0x35,0x30,0x3f,0x3a,0x21,0x24,0x2b,0x2e,
					0x0,0x6,0xc,0xa,0x18,0x1e,0x14,0x12,0x30,0x36,0x3c,0x3a,0x28,0x2e,0x24,0x22,0x60,0x66,0x6c,0x6a,0x78,0x7e,0x74,0x72,0x50,0x56,0x5c,0x5a,0x48,0x4e,0x44,0x42,0xc0,0xc6,0xcc,0xca,0xd8,0xde,0xd4,0xd2,0xf0,0xf6,0xfc,0xfa,0xe8,0xee,0xe4,0xe2,0xa0,0xa6,0xac,0xaa,0xb8,0xbe,0xb4,0xb2,0x90,0x96,0x9c,0x9a,0x88,0x8e,0x84,0x82,0x9b,0x9d,0x97,0x91,0x83,0x85,0x8f,0x89,0xab,0xad,0xa7,0xa1,0xb3,0xb5,0xbf,0xb9,0xfb,0xfd,0xf7,0xf1,0xe3,0xe5,0xef,0xe9,0xcb,0xcd,0xc7,0xc1,0xd3,0xd5,0xdf,0xd9,0x5b,0x5d,0x57,0x51,0x43,0x45,0x4f,0x49,0x6b,0x6d,0x67,0x61,0x73,0x75,0x7f,0x79,0x3b,0x3d,0x37,0x31,0x23,0x25,0x2f,0x29,0xb,0xd,0x7,0x1,0x13,0x15,0x1f,0x19,0x2d,0x2b,0x21,0x27,0x35,0x33,0x39,0x3f,0x1d,0x1b,0x11,0x17,0x5,0x3,0x9,0xf,0x4d,0x4b,0x41,0x47,0x55,0x53,0x59,0x5f,0x7d,0x7b,0x71,0x77,0x65,0x63,0x69,0x6f,0xed,0xeb,0xe1,0xe7,0xf5,0xf3,0xf9,0xff,0xdd,0xdb,0xd1,0xd7,0xc5,0xc3,0xc9,0xcf,0x8d,0x8b,0x81,0x87,0x95,0x93,0x99,0x9f,0xbd,0xbb,0xb1,0xb7,0xa5,0xa3,0xa9,0xaf,0xb6,0xb0,0xba,0xbc,0xae,0xa8,0xa2,0xa4,0x86,0x80,0x8a,0x8c,0x9e,0x98,0x92,0x94,0xd6,0xd0,0xda,0xdc,0xce,0xc8,0xc2,0xc4,0xe6,0xe0,0xea,0xec,0xfe,0xf8,0xf2,0xf4,0x76,0x70,0x7a,0x7c,0x6e,0x68,0x62,0x64,0x46,0x40,0x4a,0x4c,0x5e,0x58,0x52,0x54,0x16,0x10,0x1a,0x1c,0xe,0x8,0x2,0x4,0x26,0x20,0x2a,0x2c,0x3e,0x38,0x32,0x34,
					0x0,0x7,0xe,0x9,0x1c,0x1b,0x12,0x15,0x38,0x3f,0x36,0x31,0x24,0x23,0x2a,0x2d,0x70,0x77,0x7e,0x79,0x6c,0x6b,0x62,0x65,0x48,0x4f,0x46,0x41,0x54,0x53,0x5a,0x5d,0xe0,0xe7,0xee,0xe9,0xfc,0xfb,0xf2,0xf5,0xd8,0xdf,0xd6,0xd1,0xc4,0xc3,0xca,0xcd,0x90,0x97,0x9e,0x99,0x8c,0x8b,0x82,0x85,0xa8,0xaf,0xa6,0xa1,0xb4,0xb3,0xba,0xbd,0xdb,0xdc,0xd5,0xd2,0xc7,0xc0,0xc9,0xce,0xe3,0xe4,0xed,0xea,0xff,0xf8,0xf1,0xf6,0xab,0xac,0xa5,0xa2,0xb7,0xb0,0xb9,0xbe,0x93,0x94,0x9d,0x9a,0x8f,0x88,0x81,0x86,0x3b,0x3c,0x35,0x32,0x27,0x20,0x29,0x2e,0x3,0x4,0xd,0xa,0x1f,0x18,0x11,0x16,0x4b,0x4c,0x45,0x42,0x57,0x50,0x59,0x5e,0x73,0x74,0x7d,0x7a,0x6f,0x68,0x61,0x66,0xad,0xaa,0xa3,0xa4,0xb1,0xb6,0xbf,0xb8,0x95,0x92,0x9b,0x9c,0x89,0x8e,0x87,0x80,0xdd,0xda,0xd3,0xd4,0xc1,0xc6,0xcf,0xc8,0xe5,0xe2,0xeb,0xec,0xf9,0xfe,0xf7,0xf0,0x4d,0x4a,0x43,0x44,0x51,0x56,0x5f,0x58,0x75,0x72,0x7b,0x7c,0x69,0x6e,0x67,0x60,0x3d,0x3a,0x33,0x34,0x21,0x26,0x2f,0x28,0x5,0x2,0xb,0xc,0x19,0x1e,0x17,0x10,0x76,0x71,0x78,0x7f,0x6a,0x6d,0x64,0x63,0x4e,0x49,0x40,0x47,0x52,0x55,0x5c,0x5b,0x6,0x1,0x8,0xf,0x1a,0x1d,0x14,0x13,0x3e,0x39,0x30,0x37,0x22,0x25,0x2c,0x2b,0x96,0x91,0x98,0x9f,0x8a,0x8d,0x84,0x83,0xae,0xa9,0xa0,0xa7,0xb2,0xb5,0xbc,0xbb,0xe6,0xe1,0xe8,0xef,0xfa,0xfd,0xf4,0xf3,0xde,0xd9,0xd0,0xd7,0xc2,0xc5,0xcc,0xcb,
					0x0,0x8,0x10,0x18,0x20,0x28,0x30,0x38,0x40,0x48,0x50,0x58,0x60,0x68,0x70,0x78,0x80,0x88,0x90,0x98,0xa0,0xa8,0xb0,0xb8,0xc0,0xc8,0xd0,0xd8,0xe0,0xe8,0xf0,0xf8,0x1b,0x13,0xb,0x3,0x3b,0x33,0x2b,0x23,0x5b,0x53,0x4b,0x43,0x7b,0x73,0x6b,0x63,0x9b,0x93,0x8b,0x83,0xbb,0xb3,0xab,0xa3,0xdb,0xd3,0xcb,0xc3,0xfb,0xf3,0xeb,0xe3,0x36,0x3e,0x26,0x2e,0x16,0x1e,0x6,0xe,0x76,0x7e,0x66,0x6e,0x56,0x5e,0x46,0x4e,0xb6,0xbe,0xa6,0xae,0x96,0x9e,0x86,0x8e,0xf6,0xfe,0xe6,0xee,0xd6,0xde,0xc6,0xce,0x2d,0x25,0x3d,0x35,0xd,0x5,0x1d,0x15,0x6d,0x65,0x7d,0x75,0x4d,0x45,0x5d,0x55,0xad,0xa5,0xbd,0xb5,0x8d,0x85,0x9d,0x95,0xed,0xe5,0xfd,0xf5,0xcd,0xc5,0xdd,0xd5,0x6c,0x64,0x7c,0x74,0x4c,0x44,0x5c,0x54,0x2c,0x24,0x3c,0x34,0xc,0x4,0x1c,0x14,0xec,0xe4,0xfc,0xf4,0xcc,0xc4,0xdc,0xd4,0xac,0xa4,0xbc,0xb4,0x8c,0x84,0x9c,0x94,0x77,0x7f,0x67,0x6f,0x57,0x5f,0x47,0x4f,0x37,0x3f,0x27,0x2f,0x17,0x1f,0x7,0xf,0xf7,0xff,0xe7,0xef,0xd7,0xdf,0xc7,0xcf,0xb7,0xbf,0xa7,0xaf,0x97,0x9f,0x87,0x8f,0x5a,0x52,0x4a,0x42,0x7a,0x72,0x6a,0x62,0x1a,0x12,0xa,0x2,0x3a,0x32,0x2a,0x22,0xda,0xd2,0xca,0xc2,0xfa,0xf2,0xea,0xe2,0x9a,0x92,0x8a,0x82,0xba,0xb2,0xaa,0xa2,0x41,0x49,0x51,0x59,0x61,0x69,0x71,0x79,0x1,0x9,0x11,0x19,0x21,0x29,0x31,0x39,0xc1,0xc9,0xd1,0xd9,0xe1,0xe9,0xf1,0xf9,0x81,0x89,0x91,0x99,0xa1,0xa9,0xb1,0xb9,
					0x0,0x9,0x12,0x1b,0x24,0x2d,0x36,0x3f,0x48,0x41,0x5a,0x53,0x6c,0x65,0x7e,0x77,0x90,0x99,0x82,0x8b,0xb4,0xbd,0xa6,0xaf,0xd8,0xd1,0xca,0xc3,0xfc,0xf5,0xee,0xe7,0x3b,0x32,0x29,0x20,0x1f,0x16,0xd,0x4,0x73,0x7a,0x61,0x68,0x57,0x5e,0x45,0x4c,0xab,0xa2,0xb9,0xb0,0x8f,0x86,0x9d,0x94,0xe3,0xea,0xf1,0xf8,0xc7,0xce,0xd5,0xdc,0x76,0x7f,0x64,0x6d,0x52,0x5b,0x40,0x49,0x3e,0x37,0x2c,0x25,0x1a,0x13,0x8,0x1,0xe6,0xef,0xf4,0xfd,0xc2,0xcb,0xd0,0xd9,0xae,0xa7,0xbc,0xb5,0x8a,0x83,0x98,0x91,0x4d,0x44,0x5f,0x56,0x69,0x60,0x7b,0x72,0x5,0xc,0x17,0x1e,0x21,0x28,0x33,0x3a,0xdd,0xd4,0xcf,0xc6,0xf9,0xf0,0xeb,0xe2,0x95,0x9c,0x87,0x8e,0xb1,0xb8,0xa3,0xaa,0xec,0xe5,0xfe,0xf7,0xc8,0xc1,0xda,0xd3,0xa4,0xad,0xb6,0xbf,0x80,0x89,0x92,0x9b,0x7c,0x75,0x6e,0x67,0x58,0x51,0x4a,0x43,0x34,0x3d,0x26,0x2f,0x10,0x19,0x2,0xb,0xd7,0xde,0xc5,0xcc,0xf3,0xfa,0xe1,0xe8,0x9f,0x96,0x8d,0x84,0xbb,0xb2,0xa9,0xa0,0x47,0x4e,0x55,0x5c,0x63,0x6a,0x71,0x78,0xf,0x6,0x1d,0x14,0x2b,0x22,0x39,0x30,0x9a,0x93,0x88,0x81,0xbe,0xb7,0xac,0xa5,0xd2,0xdb,0xc0,0xc9,0xf6,0xff,0xe4,0xed,0xa,0x3,0x18,0x11,0x2e,0x27,0x3c,0x35,0x42,0x4b,0x50,0x59,0x66,0x6f,0x74,0x7d,0xa1,0xa8,0xb3,0xba,0x85,0x8c,0x97,0x9e,0xe9,0xe0,0xfb,0xf2,0xcd,0xc4,0xdf,0xd6,0x31,0x38,0x23,0x2a,0x15,0x1c,0x7,0xe,0x79,0x70,0x6b,0x62,0x5d,0x54,0x4f,0x46,
					0x0,0xa,0x14,0x1e,0x28,0x22,0x3c,0x36,0x50,0x5a,0x44,0x4e,0x78,0x72,0x6c,0x66,0xa0,0xaa,0xb4,0xbe,0x88,0x82,0x9c,0x96,0xf0,0xfa,0xe4,0xee,0xd8,0xd2,0xcc,0xc6,0x5b,0x51,0x4f,0x45,0x73,0x79,0x67,0x6d,0xb,0x1,0x1f,0x15,0x23,0x29,0x37,0x3d,0xfb,0xf1,0xef,0xe5,0xd3,0xd9,0xc7,0xcd,0xab,0xa1,0xbf,0xb5,0x83,0x89,0x97,0x9d,0xb6,0xbc,0xa2,0xa8,0x9e,0x94,0x8a,0x80,0xe6,0xec,0xf2,0xf8,0xce,0xc4,0xda,0xd0,0x16,0x1c,0x2,0x8,0x3e,0x34,0x2a,0x20,0x46,0x4c,0x52,0x58,0x6e,0x64,0x7a,0x70,0xed,0xe7,0xf9,0xf3,0xc5,0xcf,0xd1,0xdb,0xbd,0xb7,0xa9,0xa3,0x95,0x9f,0x81,0x8b,0x4d,0x47,0x59,0x53,0x65,0x6f,0x71,0x7b,0x1d,0x17,0x9,0x3,0x35,0x3f,0x21,0x2b,0x77,0x7d,0x63,0x69,0x5f,0x55,0x4b,0x41,0x27,0x2d,0x33,0x39,0xf,0x5,0x1b,0x11,0xd7,0xdd,0xc3,0xc9,0xff,0xf5,0xeb,0xe1,0x87,0x8d,0x93,0x99,0xaf,0xa5,0xbb,0xb1,0x2c,0x26,0x38,0x32,0x4,0xe,0x10,0x1a,0x7c,0x76,0x68,0x62,0x54,0x5e,0x40,0x4a,0x8c,0x86,0x98,0x92,0xa4,0xae,0xb0,0xba,0xdc,0xd6,0xc8,0xc2,0xf4,0xfe,0xe0,0xea,0xc1,0xcb,0xd5,0xdf,0xe9,0xe3,0xfd,0xf7,0x91,0x9b,0x85,0x8f,0xb9,0xb3,0xad,0xa7,0x61,0x6b,0x75,0x7f,0x49,0x43,0x5d,0x57,0x31,0x3b,0x25,0x2f,0x19,0x13,0xd,0x7,0x9a,0x90,0x8e,0x84,0xb2,0xb8,0xa6,0xac,0xca,0xc0,0xde,0xd4,0xe2,0xe8,0xf6,0xfc,0x3a,0x30,0x2e,0x24,0x12,0x18,0x6,0xc,0x6a,0x60,0x7e,0x74,0x42,0x48,0x56,0x5c,
					0x0,0xb,0x16,0x1d,0x2c,0x27,0x3a,0x31,0x58,0x53,0x4e,0x45,0x74,0x7f,0x62,0x69,0xb0,0xbb,0xa6,0xad,0x9c,0x97,0x8a,0x81,0xe8,0xe3,0xfe,0xf5,0xc4,0xcf,0xd2,0xd9,0x7b,0x70,0x6d,0x66,0x57,0x5c,0x41,0x4a,0x23,0x28,0x35,0x3e,0xf,0x4,0x19,0x12,0xcb,0xc0,0xdd,0xd6,0xe7,0xec,0xf1,0xfa,0x93,0x98,0x85,0x8e,0xbf,0xb4,0xa9,0xa2,0xf6,0xfd,0xe0,0xeb,0xda,0xd1,0xcc,0xc7,0xae,0xa5,0xb8,0xb3,0x82,0x89,0x94,0x9f,0x46,0x4d,0x50,0x5b,0x6a,0x61,0x7c,0x77,0x1e,0x15,0x8,0x3,0x32,0x39,0x24,0x2f,0x8d,0x86,0x9b,0x90,0xa1,0xaa,0xb7,0xbc,0xd5,0xde,0xc3,0xc8,0xf9,0xf2,0xef,0xe4,0x3d,0x36,0x2b,0x20,0x11,0x1a,0x7,0xc,0x65,0x6e,0x73,0x78,0x49,0x42,0x5f,0x54,0xf7,0xfc,0xe1,0xea,0xdb,0xd0,0xcd,0xc6,0xaf,0xa4,0xb9,0xb2,0x83,0x88,0x95,0x9e,0x47,0x4c,0x51,0x5a,0x6b,0x60,0x7d,0x76,0x1f,0x14,0x9,0x2,0x33,0x38,0x25,0x2e,0x8c,0x87,0x9a,0x91,0xa0,0xab,0xb6,0xbd,0xd4,0xdf,0xc2,0xc9,0xf8,0xf3,0xee,0xe5,0x3c,0x37,0x2a,0x21,0x10,0x1b,0x6,0xd,0x64,0x6f,0x72,0x79,0x48,0x43,0x5e,0x55,0x1,0xa,0x17,0x1c,0x2d,0x26,0x3b,0x30,0x59,0x52,0x4f,0x44,0x75,0x7e,0x63,0x68,0xb1,0xba,0xa7,0xac,0x9d,0x96,0x8b,0x80,0xe9,0xe2,0xff,0xf4,0xc5,0xce,0xd3,0xd8,0x7a,0x71,0x6c,0x67,0x56,0x5d,0x40,0x4b,0x22,0x29,0x34,0x3f,0xe,0x5,0x18,0x13,0xca,0xc1,0xdc,0xd7,0xe6,0xed,0xf0,0xfb,0x92,0x99,0x84,0x8f,0xbe,0xb5,0xa8,0xa3,
					0x0,0xc,0x18,0x14,0x30,0x3c,0x28,0x24,0x60,0x6c,0x78,0x74,0x50,0x5c,0x48,0x44,0xc0,0xcc,0xd8,0xd4,0xf0,0xfc,0xe8,0xe4,0xa0,0xac,0xb8,0xb4,0x90,0x9c,0x88,0x84,0x9b,0x97,0x83,0x8f,0xab,0xa7,0xb3,0xbf,0xfb,0xf7,0xe3,0xef,0xcb,0xc7,0xd3,0xdf,0x5b,0x57,0x43,0x4f,0x6b,0x67,0x73,0x7f,0x3b,0x37,0x23,0x2f,0xb,0x7,0x13,0x1f,0x2d,0x21,0x35,0x39,0x1d,0x11,0x5,0x9,0x4d,0x41,0x55,0x59,0x7d,0x71,0x65,0x69,0xed,0xe1,0xf5,0xf9,0xdd,0xd1,0xc5,0xc9,0x8d,0x81,0x95,0x99,0xbd,0xb1,0xa5,0xa9,0xb6,0xba,0xae,0xa2,0x86,0x8a,0x9e,0x92,0xd6,0xda,0xce,0xc2,0xe6,0xea,0xfe,0xf2,0x76,0x7a,0x6e,0x62,0x46,0x4a,0x5e,0x52,0x16,0x1a,0xe,0x2,0x26,0x2a,0x3e,0x32,0x5a,0x56,0x42,0x4e,0x6a,0x66,0x72,0x7e,0x3a,0x36,0x22,0x2e,0xa,0x6,0x12,0x1e,0x9a,0x96,0x82,0x8e,0xaa,0xa6,0xb2,0xbe,0xfa,0xf6,0xe2,0xee,0xca,0xc6,0xd2,0xde,0xc1,0xcd,0xd9,0xd5,0xf1,0xfd,0xe9,0xe5,0xa1,0xad,0xb9,0xb5,0x91,0x9d,0x89,0x85,0x1,0xd,0x19,0x15,0x31,0x3d,0x29,0x25,0x61,0x6d,0x79,0x75,0x51,0x5d,0x49,0x45,0x77,0x7b,0x6f,0x63,0x47,0x4b,0x5f,0x53,0x17,0x1b,0xf,0x3,0x27,0x2b,0x3f,0x33,0xb7,0xbb,0xaf,0xa3,0x87,0x8b,0x9f,0x93,0xd7,0xdb,0xcf,0xc3,0xe7,0xeb,0xff,0xf3,0xec,0xe0,0xf4,0xf8,0xdc,0xd0,0xc4,0xc8,0x8c,0x80,0x94,0x98,0xbc,0xb0,0xa4,0xa8,0x2c,0x20,0x34,0x38,0x1c,0x10,0x4,0x8,0x4c,0x40,0x54,0x58,0x7c,0x70,0x64,0x68,
					0x0,0xd,0x1a,0x17,0x34,0x39,0x2e,0x23,0x68,0x65,0x72,0x7f,0x5c,0x51,0x46,0x4b,0xd0,0xdd,0xca,0xc7,0xe4,0xe9,0xfe,0xf3,0xb8,0xb5,0xa2,0xaf,0x8c,0x81,0x96,0x9b,0xbb,0xb6,0xa1,0xac,0x8f,0x82,0x95,0x98,0xd3,0xde,0xc9,0xc4,0xe7,0xea,0xfd,0xf0,0x6b,0x66,0x71,0x7c,0x5f,0x52,0x45,0x48,0x3,0xe,0x19,0x14,0x37,0x3a,0x2d,0x20,0x6d,0x60,0x77,0x7a,0x59,0x54,0x43,0x4e,0x5,0x8,0x1f,0x12,0x31,0x3c,0x2b,0x26,0xbd,0xb0,0xa7,0xaa,0x89,0x84,0x93,0x9e,0xd5,0xd8,0xcf,0xc2,0xe1,0xec,0xfb,0xf6,0xd6,0xdb,0xcc,0xc1,0xe2,0xef,0xf8,0xf5,0xbe,0xb3,0xa4,0xa9,0x8a,0x87,0x90,0x9d,0x6,0xb,0x1c,0x11,0x32,0x3f,0x28,0x25,0x6e,0x63,0x74,0x79,0x5a,0x57,0x40,0x4d,0xda,0xd7,0xc0,0xcd,0xee,0xe3,0xf4,0xf9,0xb2,0xbf,0xa8,0xa5,0x86,0x8b,0x9c,0x91,0xa,0x7,0x10,0x1d,0x3e,0x33,0x24,0x29,0x62,0x6f,0x78,0x75,0x56,0x5b,0x4c,0x41,0x61,0x6c,0x7b,0x76,0x55,0x58,0x4f,0x42,0x9,0x4,0x13,0x1e,0x3d,0x30,0x27,0x2a,0xb1,0xbc,0xab,0xa6,0x85,0x88,0x9f,0x92,0xd9,0xd4,0xc3,0xce,0xed,0xe0,0xf7,0xfa,0xb7,0xba,0xad,0xa0,0x83,0x8e,0x99,0x94,0xdf,0xd2,0xc5,0xc8,0xeb,0xe6,0xf1,0xfc,0x67,0x6a,0x7d,0x70,0x53,0x5e,0x49,0x44,0xf,0x2,0x15,0x18,0x3b,0x36,0x21,0x2c,0xc,0x1,0x16,0x1b,0x38,0x35,0x22,0x2f,0x64,0x69,0x7e,0x73,0x50,0x5d,0x4a,0x47,0xdc,0xd1,0xc6,0xcb,0xe8,0xe5,0xf2,0xff,0xb4,0xb9,0xae,0xa3,0x80,0x8d,0x9a,0x97,
					0x0,0xe,0x1c,0x12,0x38,0x36,0x24,0x2a,0x70,0x7e,0x6c,0x62,0x48,0x46,0x54,0x5a,0xe0,0xee,0xfc,0xf2,0xd8,0xd6,0xc4,0xca,0x90,0x9e,0x8c,0x82,0xa8,0xa6,0xb4,0xba,0xdb,0xd5,0xc7,0xc9,0xe3,0xed,0xff,0xf1,0xab,0xa5,0xb7,0xb9,0x93,0x9d,0x8f,0x81,0x3b,0x35,0x27,0x29,0x3,0xd,0x1f,0x11,0x4b,0x45,0x57,0x59,0x73,0x7d,0x6f,0x61,0xad,0xa3,0xb1,0xbf,0x95,0x9b,0x89,0x87,0xdd,0xd3,0xc1,0xcf,0xe5,0xeb,0xf9,0xf7,0x4d,0x43,0x51,0x5f,0x75,0x7b,0x69,0x67,0x3d,0x33,0x21,0x2f,0x5,0xb,0x19,0x17,0x76,0x78,0x6a,0x64,0x4e,0x40,0x52,0x5c,0x6,0x8,0x1a,0x14,0x3e,0x30,0x22,0x2c,0x96,0x98,0x8a,0x84,0xae,0xa0,0xb2,0xbc,0xe6,0xe8,0xfa,0xf4,0xde,0xd0,0xc2,0xcc,0x41,0x4f,0x5d,0x53,0x79,0x77,0x65,0x6b,0x31,0x3f,0x2d,0x23,0x9,0x7,0x15,0x1b,0xa1,0xaf,0xbd,0xb3,0x99,0x97,0x85,0x8b,0xd1,0xdf,0xcd,0xc3,0xe9,0xe7,0xf5,0xfb,0x9a,0x94,0x86,0x88,0xa2,0xac,0xbe,0xb0,0xea,0xe4,0xf6,0xf8,0xd2,0xdc,0xce,0xc0,0x7a,0x74,0x66,0x68,0x42,0x4c,0x5e,0x50,0xa,0x4,0x16,0x18,0x32,0x3c,0x2e,0x20,0xec,0xe2,0xf0,0xfe,0xd4,0xda,0xc8,0xc6,0x9c,0x92,0x80,0x8e,0xa4,0xaa,0xb8,0xb6,0xc,0x2,0x10,0x1e,0x34,0x3a,0x28,0x26,0x7c,0x72,0x60,0x6e,0x44,0x4a,0x58,0x56,0x37,0x39,0x2b,0x25,0xf,0x1,0x13,0x1d,0x47,0x49,0x5b,0x55,0x7f,0x71,0x63,0x6d,0xd7,0xd9,0xcb,0xc5,0xef,0xe1,0xf3,0xfd,0xa7,0xa9,0xbb,0xb5,0x9f,0x91,0x83,0x8d,
					0x0,0xf,0x1e,0x11,0x3c,0x33,0x22,0x2d,0x78,0x77,0x66,0x69,0x44,0x4b,0x5a,0x55,0xf0,0xff,0xee,0xe1,0xcc,0xc3,0xd2,0xdd,0x88,0x87,0x96,0x99,0xb4,0xbb,0xaa,0xa5,0xfb,0xf4,0xe5,0xea,0xc7,0xc8,0xd9,0xd6,0x83,0x8c,0x9d,0x92,0xbf,0xb0,0xa1,0xae,0xb,0x4,0x15,0x1a,0x37,0x38,0x29,0x26,0x73,0x7c,0x6d,0x62,0x4f,0x40,0x51,0x5e,0xed,0xe2,0xf3,0xfc,0xd1,0xde,0xcf,0xc0,0x95,0x9a,0x8b,0x84,0xa9,0xa6,0xb7,0xb8,0x1d,0x12,0x3,0xc,0x21,0x2e,0x3f,0x30,0x65,0x6a,0x7b,0x74,0x59,0x56,0x47,0x48,0x16,0x19,0x8,0x7,0x2a,0x25,0x34,0x3b,0x6e,0x61,0x70,0x7f,0x52,0x5d,0x4c,0x43,0xe6,0xe9,0xf8,0xf7,0xda,0xd5,0xc4,0xcb,0x9e,0x91,0x80,0x8f,0xa2,0xad,0xbc,0xb3,0xc1,0xce,0xdf,0xd0,0xfd,0xf2,0xe3,0xec,0xb9,0xb6,0xa7,0xa8,0x85,0x8a,0x9b,0x94,0x31,0x3e,0x2f,0x20,0xd,0x2,0x13,0x1c,0x49,0x46,0x57,0x58,0x75,0x7a,0x6b,0x64,0x3a,0x35,0x24,0x2b,0x6,0x9,0x18,0x17,0x42,0x4d,0x5c,0x53,0x7e,0x71,0x60,0x6f,0xca,0xc5,0xd4,0xdb,0xf6,0xf9,0xe8,0xe7,0xb2,0xbd,0xac,0xa3,0x8e,0x81,0x90,0x9f,0x2c,0x23,0x32,0x3d,0x10,0x1f,0xe,0x1,0x54,0x5b,0x4a,0x45,0x68,0x67,0x76,0x79,0xdc,0xd3,0xc2,0xcd,0xe0,0xef,0xfe,0xf1,0xa4,0xab,0xba,0xb5,0x98,0x97,0x86,0x89,0xd7,0xd8,0xc9,0xc6,0xeb,0xe4,0xf5,0xfa,0xaf,0xa0,0xb1,0xbe,0x93,0x9c,0x8d,0x82,0x27,0x28,0x39,0x36,0x1b,0x14,0x5,0xa,0x5f,0x50,0x41,0x4e,0x63,0x6c,0x7d,0x72,
}; 
unsigned char  L_box(int i,unsigned char j)     
{

	return L_boxx[i][j];
}
/****************************************************************************************************************/
/*第三类操作：列混合操作 MixColumns: Process the entire block*/
static void MixColumns(unsigned char *col)//列混合
{
	unsigned char tmp[4],xt[4];
	int i;
	for(i=0;i<4;i++,col+=4)  //col代表一列的基地址，col+4:下一列的基地址
	{
		/*
		xt[0]=x2time(col[0]);
		xt[1]=x2time(col[1]);
		xt[2]=x2time(col[2]);
		xt[3]=x2time(col[3]);
		//xt[n]代表*2   xt[n]^col[n]代表*3   col[n]代表*1
		tmp[0]=(xt[0])^(xt[1]^col[1])^col[2]^col[3];	//2 3 1 1
		tmp[1]=col[0]^(xt[1])^(xt[2]^col[2])^col[3];	//1 2 3 1
		tmp[2]=col[0]^col[1]^(xt[2])^(xt[3]^col[3]);	//1 1 2 3
		tmp[3]=(xt[0]^col[0])^col[1]^col[2]^(xt[3]);	//3 1 1 2
		*/
		/*tmp[0]=x2time(col[0])^x3time(col[1])^col[2]^col[3];	//2 3 1 1
		tmp[1]=col[0]^x2time(col[1])^x3time(col[2])^col[3];	//1 2 3 1
		tmp[2]=col[0]^col[1]^x2time(col[2])^x3time(col[3]);	//1 1 2 3
		tmp[3]=x3time(col[0])^col[1]^col[2]^x2time(col[3]);	//3 1 1 2*/

		tmp[0]=L_box(1,col[0])^L_box(2,col[1])^col[2]^col[3];	
		tmp[1]=col[0]^L_box(1,col[1])^L_box(2,col[2])^col[3];	
		tmp[2]=col[0]^col[1]^L_box(1,col[2])^L_box(2,col[3]);	
		tmp[3]=L_box(2,col[0])^col[1]^col[2]^L_box(1,col[3]);	
		//修改后的值 直接在原矩阵上修改
		col[0]=tmp[0];
		col[1]=tmp[1];
		col[2]=tmp[2];
		col[3]=tmp[3];
	}
}
//逆向列混淆
static void Contrary_MixColumns(unsigned char *col)
{
	unsigned char tmp[4];
	unsigned char xt2[4];//colx2
	unsigned char xt4[4];//colx4
	unsigned char xt8[4];//colx8
	int x;
	for(x=0;x<4;x++,col+=4)
	{
		/*
		xt2[0]=x2time(col[0]);
		xt2[1]=x2time(col[1]);
		xt2[2]=x2time(col[2]);
		xt2[3]=x2time(col[3]);
		xt4[0]=x2time(xt2[0]);
		xt4[1]=x2time(xt2[1]);
		xt4[2]=x2time(xt2[2]);
		xt4[3]=x2time(xt2[3]);
		xt8[0]=x2time(xt4[0]);
		xt8[1]=x2time(xt4[1]);
		xt8[2]=x2time(xt4[2]);
		xt8[3]=x2time(xt4[3]);
		tmp[0]=xt8[0]^xt4[0]^xt2[0]^xt8[1]^xt2[1]^col[1]^xt8[2]^xt4[2]^col[2]^xt8[3]^col[3];
		tmp[1]=xt8[0]^col[0]^xt8[1]^xt4[1]^xt2[1]^xt8[2]^xt2[2]^col[2]^xt8[3]^xt4[3]^col[3];
		tmp[2]=xt8[0]^xt4[0]^col[0]^xt8[1]^col[1]^xt8[2]^xt4[2]^xt2[2]^xt8[3]^xt2[3]^col[3];
		tmp[3]=xt8[0]^xt2[0]^col[0]^xt8[1]^xt4[1]^col[1]^xt8[2]^col[2]^xt8[3]^xt4[3]^xt2[3];*/
		
	/*	tmp[0]=xEtime(col[0])^xBtime(col[1])^xDtime(col[2])^x9time(col[3]);
		tmp[1]=x9time(col[0])^xEtime(col[1])^xBtime(col[2])^xDtime(col[3]);
		tmp[2]=xDtime(col[0])^x9time(col[1])^xEtime(col[2])^xBtime(col[3]);
		tmp[3]=xBtime(col[0])^xDtime(col[1])^x9time(col[2])^xEtime(col[3]);

		tmp[0]=multiply(col[0],0x0e)^multiply(col[1],0x0b)^multiply(col[2],0x0d)^multiply(col[3],0x09);	
		tmp[1]=multiply(col[0],0x09)^multiply(col[1],0x0e)^multiply(col[2],0x0b)^multiply(col[3],0x0d);	
		tmp[2]=multiply(col[0],0x0d)^multiply(col[1],0x09)^multiply(col[2],0x0e)^multiply(col[3],0x0b);	
		tmp[3]=multiply(col[0],0x0b)^multiply(col[1],0x0d)^multiply(col[2],0x09)^multiply(col[3],0x0e);*/

		tmp[0]=L_box(13,col[0])^L_box(10,col[1])^L_box(12,col[2])^L_box(8,col[3]);	
		tmp[1]=L_box(8,col[0])^L_box(13,col[1])^L_box(10,col[2])^L_box(12,col[3]);	
		tmp[2]=L_box(12,col[0])^L_box(8,col[1])^L_box(13,col[2])^L_box(10,col[3]);	
		tmp[3]=L_box(10,col[0])^L_box(12,col[1])^L_box(8,col[2])^L_box(13,col[3]);
		col[0]=tmp[0];
		col[1]=tmp[1];
		col[2]=tmp[2];
		col[3]=tmp[3];
	}
}
/*第二类操作：行移位：行左循环移位 ShiftRows:Shifts the entire block*/
static void ShiftRows(unsigned char *col)//正向行移位
{
	/*
		1 5  9 13				5  9 13 1 
		2 6 10 14				10 14 2 6
		3 7 11 15				15 3 7 11
		4 8 12 16				16 4 8 12
	*/
	unsigned char t;
	/*1nd row*///左移1位
	t=col[1];col[1]=col[5];col[5]=col[9];col[9]=col[13];col[13]=t;
	/*2rd row*///左移2位，交换2次数字来实现
	t=col[2];col[2]=col[10];col[10]=t;
	t=col[6];col[6]=col[14];col[14]=t;
	/*3th row*///左移3位，相当于右移1次
	t=col[15];col[15]=col[11];col[11]=col[7];col[7]=col[3];col[3]=t;
	/*4th row*/	//第4行不移位
}
//逆向行移位
static void Contrary_ShiftRows(unsigned char *col)
{
	unsigned char t;
	/*1nd row*/
	t=col[13];col[13]=col[9];col[9]=col[5];col[5]=col[1];col[1]=t;
	/*2rd row*/
	t=col[2];col[2]=col[10];col[10]=t;
	t=col[6];col[6]=col[14];col[14]=t;
	/*3th row*/
	t=col[3];col[3]=col[7];col[7]=col[11];col[11]=col[15];col[15]=t;
	/*4th row*/	//第4行不移位
}
/*第一类操作：s盒字节代换替换 SubBytes*/
static void SubBytes(unsigned char *col)//字节代换
{
	int x;
	for(x=0;x<16;x++)
	{
		col[x]=sbox[col[x]];
	}
}
//逆向字节代换
static void Contrary_SubBytes(unsigned char *col)
{
	int x;
	for(x=0;x<16;x++)
	{
		col[x]=contrary_sbox[col[x]];
	}
}
/*第四类操作：轮密钥加 AddRoundKey*/
static void AddRoundKey(unsigned char *col,unsigned char *expansionkey,int round)//密匙加
{
	//扩展密钥：44*32bit =11*4* 4*8 =  16字节*11轮，每轮用16字节密钥
	//第0轮，只进行一次轮密钥加
	//第1-10轮，轮密钥加
	int x;				
	for(x=0;x<16;x++)	//每1轮操作：4*32bit密钥 = 16个字节密钥
	{
		col[x]^=expansionkey[(round<<4)+x];
	}
}
/* AES加密总函数 10轮4类操作 Encrypt a single block with Nr Rounds(10,12,14)*/
void AesEncrypt(unsigned char *blk,unsigned char *expansionkey,int Nr)//加密一个区块
{
	//输入blk原文，直接在上面修改，输出blk密文
	//输入skey：
	//输入Nr = 10轮
	int round;
	//第1轮之前：轮密钥加
	AddRoundKey(blk,expansionkey,0);
	//第1-9轮：4类操作：字节代换、行移位、列混合、轮密钥加
	for(round=1;round<=(Nr-1);round++)	
	{
		SubBytes(blk);		//输入16字节数组，直接在原数组上修改
		ShiftRows(blk);		//输入16字节数组，直接在原数组上修改
		MixColumns(blk);	//输入16字节数组，直接在原数组上修改
		AddRoundKey(blk,expansionkey,round);
	}
	//第10轮：不进行列混合
	SubBytes(blk);
	ShiftRows(blk);
	AddRoundKey(blk,expansionkey,Nr);
}
//AES 解密总函数
void Contrary_AesEncrypt(unsigned char *blk,unsigned char *expansionkey,int Nr)
{
	int x;
	/* unsigned char *contrary_key=key;
	for(x=0;x<11;x++,key+=16)
	Contrary_MixColumns(key);*/
	AddRoundKey(blk,expansionkey,Nr);
	Contrary_ShiftRows(blk);
	Contrary_SubBytes(blk);
	for(x=(Nr-1);x>=1;x--)
	{
		AddRoundKey(blk,expansionkey,x);
		Contrary_MixColumns(blk);
		Contrary_ShiftRows(blk);
		Contrary_SubBytes(blk);
	}
	AddRoundKey(blk,expansionkey,0);
}
/*//密钥编排，16字节--->44列32bit密钥生成--> 11组16字节:分别用于11轮 轮密钥加运算
Schedule a secret key for use.
*outkey[] must be 16*15 bytes in size
*Nk==number of 32 bit words in the key,e.g.,4,6,8
*Nr==number of rounds,e.g.,10,12,14
*/
void ScheduleKey(unsigned char *inkey,unsigned char *outkey,int Nk,int Nr)//安排一个保密密钥使用
{
	//inkey:初始16字节密钥key
	//outkey：11组*16字节扩展密钥expansionkey
	//Nk：4列
	//Nr：10轮round
	unsigned char temp[4],t;
	int x,i;
	/*copy the key*/
	//第0组：[0-3]直接拷贝
	for(i=0;i<(4*Nk);i++)
	{
		outkey[i]=inkey[i];
	}
	//第1-10组：[4-43]
	i=Nk;
	while(i<(4*(Nr+1))) //i=4~43 WORD 32bit的首字节地址，每一个4字节
	{//1次循环生成1个字节扩展密钥，4次循环生成一个WORD
		//temp：4字节数组：代表一个WORD密钥
		/*temp=w[i-1]*/
		//i不是4的倍数的时候
		//每个temp = 每个outkey32bit = 4字节
		for(x=0;x<4;x++) 
			temp[x]=outkey[(4*(i-1))+x];	//i：32bit的首字节地址
		//i是4的倍数的时候
		if(i%Nk==0)
		{
			/*字循环：循环左移1字节 RotWord()*/
			t=temp[0];temp[0]=temp[1];temp[1]=temp[2];temp[2]=temp[3];temp[3]=t;
			/*字节代换：SubWord()*/
			for(x=0;x<4;x++)
			{
				temp[x]=sbox[temp[x]];
			}
			/*轮常量异或：Rcon[j]*/
			temp[0]^=Rcon[(i/Nk)-1];
		}
		//else if(Nk>6 && (i%Nk)==4)	//Nk>6的算法不同，暂时用不到
		//{
		//	/*SubWord*/
		//	for(x=0;x<4;x++)
		//	{
		//		temp[x]=sbox[temp[x]];
		//	}
		//}
 
		/*w[i] = w[i-4]^w[i-1]*/
		for(x=0;x<4;x++)
		{
			outkey[(4*i)+x]=outkey[(4*(i-Nk))+x]^temp[x];
		}
		++i;
	}
}
int main(void){
	/*
	pt：原文16字节-->密文
	key：原密钥16字节
	skey：密钥扩展44long
	sbox：s盒
	*/
	time_t t1,t2;
	unsigned char pt[17],key[17];
	unsigned char expansionkey[15*16];
	int i;
	int j;
	printf("please input plaintext\n");//输入无格式的字符串字符个数不得少于六个！！！！尽量用不同的数字或字母
	scanf("%s",pt);
	printf("please input key\n");//输入加密钥匙密匙个数不得低于六个！！！！尽量用不同的数字或字母
	scanf("%s",key);
 
	/*加密*/
	ScheduleKey(key,expansionkey,4,10);	//1、密钥扩展生成
	AesEncrypt(pt,expansionkey,10);		//2、AES 加密

	printf("AesEncrypt text is: ");	//输出密码文件
	for (i = 0; i < 16; i++)
	{
		printf("%02x ", pt[i]);
	}
	printf("\n");
	printf("\n");
 
	/*解密*/
	Contrary_AesEncrypt(pt,expansionkey,10);//AES 解密

	printf("after Contrary_AesEncrypt,plaintext is: ");//将解密文件输出
	for (i = 0; i < 16; i++)
	{
		printf("%c ", pt[i]);
	}
	printf("\n");
	printf("\n");
	time(&t1);
	for (i = 0; i < 1000000; i++)
	{
		Contrary_AesEncrypt(pt,expansionkey,10);
	}
	time(&t2);
	
	printf("差异时间：%f seconds",difftime(t2,t1));
	while(1);
	return 0;
}